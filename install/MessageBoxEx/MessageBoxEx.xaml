<Window x:Name="MessageBoxMain"
    x:Class="InstallEAS.MessageBoxEx"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:InstallEAS"
    Title="{Binding Path=MessageTitle}"
    Width="Auto"
    Height="Auto"
    MinWidth="200"
    MinHeight="100"
    MaxWidth="{Binding Path=MaxFormWidth}"
    MaxHeight="{Binding Path=ScreenHeight}"
    Closing="Window_Closing"
    Loaded="Window_Loaded"
    MouseLeftButtonDown="Window_MouseLeftButtonDown"
    Opacity="0.95"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    SizeChanged="NotifiableWindow_SizeChanged"
    SizeToContent="WidthAndHeight"
    SourceInitialized="Window_SourceInitialized"
    WindowStartupLocation="CenterOwner"
    WindowStyle="None"
    Topmost="False"
    
    mc:Ignorable="d" AllowsTransparency="True" BorderBrush="#FF545454" BorderThickness="0" Background="{x:Null}" >

    <Window.Resources>
        <Style x:Key="GroupBoxExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Ellipse x:Name="circle" Width="15" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ButtonNormalBackgroundFill}" Stroke="{Binding Path=MessageForeground}" />
                            <Ellipse x:Name="shadow" Width="13" Height="13" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource ExpanderShadowFill}" Visibility="Hidden" />
                            <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M1,1 L4,4 7,1" SnapsToDevicePixels="false" Stroke="{Binding Path=MessageForeground}" StrokeThickness="2" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="arrow" Property="Data" Value="M 1,4 L 4,1 L 7,4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="GroupBoxBorderBrush" Color="#D0D0BF" />
        <SolidColorBrush x:Key="GroupBoxHeaderBrush" Color="White" />
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />

        <Style x:Key="ImageOpacityBase" TargetType="{x:Type Image}">
            <Setter Property="Opacity" Value="0.85" />
        </Style>
        <Style x:Key="ImageOpacityChanger" BasedOn="{StaticResource ImageOpacityBase}" TargetType="{x:Type Image}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="linkCursor" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>







        <Style x:Key="ButtonMenuStyle1" TargetType="{x:Type Button}">
            <Setter Property="Background" Value= "{DynamicResource ResourceKey=MessageBox.Button.Default}"/>
            <Setter Property="Foreground" Value="#FFEEEEEE" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=Tittle.Border.Color}"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Segue UI" />
            <Setter Property="Height" Value="27" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" SnapsToDevicePixels="true">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10" Opacity="0.3" ShadowDepth="3" Direction="-90" RenderingBias="Quality"/>
                            </Border.Effect>
                            <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource ResourceKey=MessageBox.Button.Over}" />
                                <Setter Property="Foreground" Value="#FFFFFFFF" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{DynamicResource ResourceKey=MessageBox.Button.Pressed}" />
                                <Setter Property="Foreground" Value="#FFFFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




    </Window.Resources>






    <Border x:Name="MainWindowBorder"  BorderThickness="10" CornerRadius="12" BorderBrush="Transparent" Background="{DynamicResource ResourceKey=MessageBox.Background}">
        <Border.Effect>
            <DropShadowEffect BlurRadius="20" Direction ="-90" RenderingBias ="Quality" ShadowDepth ="5" Color ="Black" Opacity="0.2"/>
        </Border.Effect>
        <Grid>


            <Grid.RowDefinitions>
                <RowDefinition Height="30*" />
                <RowDefinition Height="37*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid x:Name="gridMsg" Grid.Row="0" Grid.RowSpan="2" Margin="10,50,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="imgGrid" Grid.Column="0">
                    <Image x:Name="imgMsgBoxIcon" Width="32" Height="32" Margin="0,0,10,0" VerticalAlignment="Top" MouseLeftButtonUp="ImgMsgBoxIcon_MouseLeftButtonUp" Source="{Binding Path=MessageIcon}" Style="{StaticResource ImageOpacityBase}" Visibility="{Binding Path=ShowIcon}" />
                </Grid>
                <Grid Grid.Column="1" VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label x:Name="textboxMessage" Grid.Row="0" Padding="0,0,15,0" VerticalContentAlignment="Stretch" Background="Transparent" BorderThickness="0" Cursor="Arrow" Foreground="White"  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled" Content="{Binding Path=Message}" FontSize="14" HorizontalContentAlignment="Center"  />
                </Grid>
            </Grid>

            <TextBlock x:Name="tbUrl" Grid.Row="2" Margin="0,0,0,10" HorizontalAlignment="Center" Foreground="{Binding Path=UrlForeground}" MouseLeftButtonUp="TbUrl_MouseLeftButtonUp" Style="{StaticResource linkCursor}" TextDecorations="Underline" TextWrapping="Wrap" Visibility="{Binding Path=ShowUrl}" />

            <CheckBox Grid.Row="3" Margin="0,0,0,10" HorizontalAlignment="Center" Content="{Binding Path=CheckBoxData.CheckBoxText}" Foreground="{Binding Path=MessageForeground}" IsChecked="{Binding Path=CheckBoxData.CheckBoxIsChecked}" Visibility="{Binding Path=ShowCheckBox}" />

            <Border x:Name="stackButtons" Grid.Row="3" Grid.RowSpan="2" Margin="0,25,0,0" Padding="10" Background="Transparent" CornerRadius="10">
                <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal">
                    <Button Style="{DynamicResource ButtonMenuStyle1}" x:Name="btnOK" Width="{Binding Path=ButtonWidth}" MinWidth="75" Margin="5,0,5,0"  Click="BtnOK_Click" Content=" Окей " IsDefault="{Binding Path=IsDefaultOK}" Visibility="{Binding Path=ShowOk}"  />
                    <Button Style="{DynamicResource ButtonMenuStyle1}" x:Name="btnYes" Width="{Binding Path=ButtonWidth}" MinWidth="75" Margin="5,0,5,0" Click="BtnYes_Click" Content=" Да " IsDefault="{Binding Path=IsDefaultYes}" Visibility="{Binding Path=ShowYes}" />
                    <Button Style="{DynamicResource ButtonMenuStyle1}" x:Name="btnNo" Width="{Binding Path=ButtonWidth}" MinWidth="75" Margin="5,0,5,0"  Click="BtnNo_Click" Content=" Нет " IsDefault="{Binding Path=IsDefaultNo}" Visibility="{Binding Path=ShowNo}"   />
                    <Button Style="{DynamicResource ButtonMenuStyle1}" x:Name="btnAbort" Width="{Binding Path=ButtonWidth}" MinWidth="75" Margin="5,0,5,0"  Click="BtnAbort_Click" Content=" Отмена " IsDefault="{Binding Path=IsDefaultAbort}" Visibility="{Binding Path=ShowAbort}"  />
                    <Button Style="{DynamicResource ButtonMenuStyle1}" x:Name="btnRetry" Width="{Binding Path=ButtonWidth}" MinWidth="75" Margin="5,0,5,0"  Click="BtnRetry_Click" Content=" Повторить " IsDefault="{Binding Path=IsDefaultRetry}" Visibility="{Binding Path=ShowRetry}"  />
                    <Button Style="{DynamicResource ButtonMenuStyle1}" x:Name="btnIgnore" Width="{Binding Path=ButtonWidth}" MinWidth="75" Margin="5,0,5,0"  Click="BtnIgnore_Click" Content=" Пропустить " IsDefault="{Binding Path=IsDefaultIgnore}" Visibility="{Binding Path=ShowIgnore}"   />
                    <Button Style="{DynamicResource ButtonMenuStyle1}" x:Name="btnCancel" Width="{Binding Path=ButtonWidth}" MinWidth="75" Margin="5,0,5,0"  Click="BtnCancel_Click" Content=" Отмена " IsDefault="{Binding Path=IsDefaultCancel}" Visibility="{Binding Path=ShowCancel}"   />
                </StackPanel>
            </Border>

            <Expander Grid.Row="4" Grid.RowSpan="2" Margin="0,40,0,0" Header="Details" IsExpanded="{Binding Path=Expanded}" Visibility="{Binding Path=ShowDetailsBtn}" Background="{x:Null}">
                <Expander.Template>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="6" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="6" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton Name="HeaderToggle" Grid.Column="0" MinWidth="0" MinHeight="0" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource GroupBoxExpanderToggleButtonStyle}" />
                                <ContentPresenter Grid.Column="1" Margin="3,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{Binding ElementName=textboxMessage, Path=Foreground}" />
                            </Grid>
                            <ContentPresenter x:Name="ExpandSite" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{Binding Path=MessageForeground}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Foreground" Value="{Binding Path=MessageForeground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Expander.Template>
                <TextBox x:Name="textboxDetails" Grid.Row="2" Height="100" Margin="0,10,0,0" Padding="0,0,10,0" Background="Transparent" BorderThickness="0" Foreground="{Binding Path=MessageForeground}" IsReadOnly="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Text="{Binding Path=DetailsText}" TextWrapping="Wrap" />
            </Expander>
            <StackPanel x:Name="tittle" Height="30" VerticalAlignment="Top" Background="Transparent" />

        </Grid>
    </Border>
</Window>
